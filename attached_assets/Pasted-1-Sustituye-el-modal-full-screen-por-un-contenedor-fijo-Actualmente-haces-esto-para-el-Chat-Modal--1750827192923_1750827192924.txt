1) Sustituye el modal full-screen por un contenedor fijo
Actualmente haces esto para el “Chat Modal”:

tsx
Copiar
Editar
<motion.div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-60 flex items-center justify-center p-4">
  {/* chat completo */}
</motion.div>
Eso es lo que fuerza el centrado.
En su lugar, envolvamos todo en un solo div fijo en bottom-right, y jugamos con clases collapsed vs expanded:

tsx
Copiar
Editar
export default function Chatbot() {
  // ...
  return (
    <div
      id="chat-wrapper"
      className={`fixed bottom-6 right-6 z-50 flex flex-col
                  transition-all duration-200
                  ${isOpen ? (isExpanded ? 'w-96 h-[600px]' : 'w-80 h-96') : 'w-16 h-16'}`}
    >
      {/* 1. Toggle principal: cerebrito o barra de título */}
      { !isOpen ? (
        <button
          onClick={() => setIsOpen(true)}
          className="w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-400 rounded-full shadow-2xl flex items-center justify-center"
        >
          <Brain size={28} />
        </button>
      ) : (
        <header className="bg-orange-500 text-white flex items-center justify-between px-3 py-2 rounded-t-lg">
          <span>MarIA</span>
          <div className="space-x-2">
            <Maximize2 onClick={() => setIsExpanded(true)} />
            <Minimize2 onClick={() => setIsExpanded(false)} />
            <Trash2 onClick={clearHistory} />
            <X onClick={() => setIsOpen(false)} />
          </div>
        </header>
      )}

      {/* 2. Cuerpo de chat (solo si está abierto) */}
      { isOpen && (
        <div
          className="flex-1 bg-slate-900 text-white p-3 overflow-y-auto"
        >
          {messages.map((m,i) => /* render mensaje */)}
          <div ref={messagesEndRef} />
        </div>
      )}

      {/* 3. Input (solo abierto) */}
      { isOpen && (
        <footer className="bg-slate-800 p-2 rounded-b-lg flex">
          <textarea
            value={inputMessage}
            onChange={e => setInputMessage(e.target.value)}
            onKeyDown={handleKeyPress}
            className="flex-1 resize-none bg-slate-700 text-white rounded-md p-2"
          />
          <button onClick={sendMessage} disabled={isLoading}>
            <Send/>
          </button>
        </footer>
      )}
    </div>
  )
}
2) CSS mínimo (puedes copiar en index.css o Tailwind utils)
css
Copiar
Editar
#chat-wrapper {
  pointer-events: auto; /* sí capta clicks */
}
#chat-wrapper.collapsed {
  /* solo el botón */
}
#chat-wrapper.expanded {
  /* ya aplica width/height vía clase */
}
Notas clave

No uses fixed inset-0 ni justify-center para el chat: con fixed bottom-6 right-6 ya basta.

Gestiona isOpen (visible/invisible) y isExpanded (compacto vs grande) dentro del mismo wrapper.

Al crecer, la caja se expande desde abajo-derecha, sin cambiar de posición.

overflow-y-auto en el cuerpo garantiza scroll interno sin forzar layout externo.

Si hay otras animaciones con transform, asegúrate de que no apliquen sobre #chat-wrapper.

Con esto, MarIA seguirá “volando” en la esquina y podrás “maximizar/minimizar” sin que el contenedor se traslade al centro.










